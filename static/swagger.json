{
  "swagger": "2.0",
  "info": {
    "description": "Il s'agit de mon serveur concernant le projet fil rouge du MS SIO. Pour rappel, l'objectif de ce mini projet est de réaliser une API de type REST en python, accessible sur un serveur distant hébergé dans le cloud (RosettaHUB). Le client soumet un fichier et récupère sa traduction en JSON associée à des méta-données établies lors de sa traduction (type MIME reconnu, nom, et taille du fichier). Pour l'instant, seul les formats : .txt, .csv, .pdf, .jpg, .jpeg, .png sont supportés.  ",
    "version": "1.0.0",
    "title": "Swagger Projet Fil Rouge",
    "contact": {
      "email": "pierre.desmarchelier@student-cs.fr"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "File",
      "description": "Everything about your file"
    }
  ],
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/transform": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Get informations about your file",
        "description": "The API returns you a json with the mimetype and the data of your file",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "upfile",
            "in": "formData",
            "description": "File to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }, 
          "400": {
            "description": "Invalid request"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "Data": {
            "type": "string"
          },
        "Metadonnees": {
          "$ref": "#/definitions/Metadonnees"
        }
      }
    }, 
    "Metadonnees": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string", 
          "example": "name_example.txt"
        },
        "mimetype": {
          "type": "string",
          "example": "text/plain"
        },
        "size": {
          "type": "string",
          "example": "10000 o"
        }
      }

    }
  }
}